{"version":3,"sources":["serviceWorker.js","components/loginmodal.jsx","components/registermodal.jsx","components/navbar.jsx","components/search.jsx","components/searchbar.jsx","components/movement.jsx","components/view.jsx","app.jsx","components/jobsviewsearch.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Login","props","context","handlelogin","bind","handleUser","login","this","setState","x","document","getElementById","y","type","style","backgroundColor","evt","field","target","value","Button","className","variant","onClick","Modal","show","centered","size","onHide","Body","Form","Group","name","Control","placeholder","email","onChange","id","password","showpassword","React","Component","Register","handleregister","handleRegstration","submit","captchaCode","reg","progress","Generatecaptcha","chr1","Math","ceil","random","chr2","chr3","str","Array","join","replace","toString","captcha","repassword","fetch","method","headers","body","JSON","stringify","response","json","responseData","Label","user","textShadow","cursor","marginLeft","NavBar","Navbar","Toggle","Collapse","Text","Search","changetext","handleselectchange","lists","searchroles","Searchlists","selection","routecontent","url","map","datas","i","length","push","event","slice","toLowerCase","handlecomponent","DropdownButton","alignRight","title","onSelect","searchtext","index","Dropdown","Item","key","eventKey","SearchBar","sendresults","choice","_state","handleSearchResult","display","popsearchmenu","Movement","increasestate","decreasestate","View","fetchAllJobs","start","end","all","values","searchresult","role","sector","e","alert","endpoint","Table","responsive","hover","bordered","company","href","link","App","ReactDOM","render","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.077fb690.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport FontAwesome from 'react-fontawesome'\nimport './../styles/ModalForm.css'\nclass Login extends React.Component{\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.handlelogin = this.handlelogin.bind(this);\n\t\tthis.handleUser = this.handleUser.bind(this);\n\t\tthis.state = {\n\t\t\tlogin: false,\n\t\t\tlog:{\n\t\t\t\t\"email\":'',\n\t\t\t\t\"password\":''\n\t\t\t},\n\t\t};\n\t}\n\thandlelogin() {\n\t\tif(this.state.login===true)\n\t\t\tthis.setState({login:false});\n\t\telse\n\t\t\tthis.setState({login:true});\n\t}\n\tshowpassword(){\n\t\tvar x=document.getElementById(\"input\");\n\t\tvar y=document.getElementById(\"eye\");\n\t\tif(x.type===\"password\") \n\t\t\t{x.type=\"text\";\n\t\t\t y.style.backgroundColor=\"grey\";\n\t\t\t}\n\t\telse {x.type=\"password\"; y.style.backgroundColor=\"\";}\n\t}\n  handleUser(evt,field) {\n  \tthis.setState({ log: { ...this.state.log, [field]: evt.target.value} });\n  }\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t<Button className=\"btn\" variant=\"success\" onClick={this.handlelogin}>\n\t\t\t\tLogin\n        \t</Button>\n\t\t\t<Modal className=\"Modal\" show={this.state.login}  centered={true} size=\"sm\" onHide={this.handlelogin}>\n\t\t\t<Modal.Body className=\"ModalBody\">\n\t\t\t<Form.Group className=\"Form\">\n    \t\t\t<div className=\"textjoin\">\n      \t\t\t\t<FontAwesome\n        \t\t\tname='fa fa-envelope'\n        \t\t\tsize='2x'\n      \t\t\t/>\n      \t\t\t<div className=\"fontjoin\">\n    \t\t\t\t<Form.Control type=\"text\" size=\"sm\" placeholder=\"email\" \n\t\t\t    \tvalue={this.state.log.email} \n\t\t\t    \tclassName=\"fa fa-envelope\"\n\t\t\t    \tonChange={(evt)=>this.handleUser(evt,\"email\")}\n\t\t\t    \t/>\n\t\t\t    </div>\n  \t\t\t\t</div><br/>\n\t\t\t  \t\t<Form.Control type=\"password\" id=\"input\" size=\"sm\" placeholder=\"password\"\n  \t\t\t\t\tvalue={this.state.log.password} \n\t\t\t    \tonChange={(evt)=>this.handleUser(evt,\"password\")}\n  \t\t\t\t/>\n  \t\t\t\t<FontAwesome\n        \t\t\tname='fa fa-eye-slash'\n        \t\t\tid=\"eye\"\n        \t\t\tsize='lg'\n        \t\t\tonClick={this.showpassword}\n      \t\t\t/>\n      \t\t\t<i> show password</i>\n      \t\t\t<br/><br/>\n\t\t\t    <Button className=\"centerbutton\" size=\"md\">Login</Button>\n\t\t\t</Form.Group>\n\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default Login;\n\n\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FontAwesome from 'react-fontawesome';\nimport './../styles/ModalForm.css'\nclass Register extends React.Component{\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.handleregister = this.handleregister.bind(this);\n\t\tthis.handleRegstration = this.handleRegstration.bind(this)\n\t\tthis.submit = this.submit.bind(this);\n\t\tthis.state = {\n\t\t\tregister:false,\n\t\t\tcaptchaCode:'',\n\t\t\treg:{\n\t\t\t\t\"user\":'',\n\t\t\t\t\"email\":'',\n\t\t\t\t\"password\":'',\n\t\t\t\t\"repassword\":'',\n\t\t\t\t\"captcha\":''\n\t\t\t},\n\t\t\tprogress:100,\n\t\t};\n\t}\n\tcomponentDidMount(){\n\t\tthis.Generatecaptcha();\t\n\t}\n\thandleregister() {\n\t\tif(this.state.register===true)\n\t\t\tthis.setState({register:false});\n\t\telse\n\t\t\tthis.setState({register:true});\n\t}\n\tGeneratecaptcha() {  \n            var chr1 = Math.ceil(Math.random() * 10) + '';  \n            var chr2 = Math.ceil(Math.random() * 10) + '';  \n            var chr3 = Math.ceil(Math.random() * 10) + '';  \n  \n            var str = new Array(4).join().replace(/(.|$)/g, function () { return ((Math.random() * 36) | 0).toString(36)[Math.random() < .5 ? \"toString\" : \"toUpperCase\"](); });  \n    \t\tthis.setState({captchaCode:str+chr1+ chr2+chr3})\n        }  \n    handleRegstration(evt,field){\n  \tthis.setState({ reg: { ...this.state.reg, [field]: evt.target.value} });\t\n  }\n  submit()\n  {\n  \tvar x=this.state.reg;\n  \tif(this.state.captchaCode===x.captcha \t&& \n  \t\tx.password!=='' && x.repassword!==''\t&&\n  \t\t\t   x.password===x.repassword \t&&\n  \t\t\t   \t\tx.name!=='' && x.email!==''\n\t\t)\n    fetch(\"http://localhost:5000/register\", {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email:x.email,\n          password:x.password,\n        })\n    })\n        .then((response) => response.json())\n        .then((responseData) => {\n            \n        })\n  }\n\trender() {\n\t\treturn (\n\t\t\t<>\n      \t\t<Button className=\"btn\" variant=\"success\" onClick={this.handleregister}>\n\t\t\t\t\tRegister\n        \t</Button>\n\t\t\t<Modal className=\"Modal\" show={this.state.register}  centered={true} size=\"sm\" onHide={this.handleregister}>\n\t\t\t<Modal.Body className=\"ModalBody\">\n\t\t\t<Form.Group className=\"Form\">\n\t\t\t\t<Form.Label variant=\"danger\">Name</Form.Label>\n  \t\t\t\t<Form.Control type=\"text\" size=\"sm\" placeholder=\"name\"\n  \t\t\t\tvalue={this.state.reg.user} \n  \t\t\t\tonChange={(evt)=>this.handleRegstration(evt,\"user\")}\n  \t\t\t\t/>\n  \t\t\t\t<Form.Label>Email</Form.Label>\n    \t\t\t<Form.Control type=\"email\" size=\"sm\" placeholder=\"email\"\n\t\t\t    \tvalue={this.state.reg.email} \n  \t\t\t\t\tonChange={(evt)=>this.handleRegstration(evt,\"email\")}\n\t\t\t    \t/>\t\n\t\t\t    <Form.Label>Password</Form.Label>\n  \t\t\t\t<Form.Control type=\"password\" size=\"sm\" placeholder=\"password\"\n  \t\t\t\tvalue={this.state.reg.password} \n  \t\t\t\tonChange={(evt)=>this.handleRegstration(evt,\"password\")}\n  \t\t\t\t/>\n\t\t\t    <Form.Label>Re-enter Password</Form.Label>\n  \t\t\t\t<Form.Control type=\"password\" size=\"sm\" placeholder=\"re-enter-passsword\"\n  \t\t\t\tvalue={this.state.reg.repassword} \n  \t\t\t\tonChange={(evt)=>this.handleRegstration(evt,\"repassword\")}\n  \t\t\t\t/><br/>\n  \t\t\t\t<Form.Label className=\"captchaStripes\">\n  \t\t\t\t{this.state.captchaCode}\n  \t\t\t\t</Form.Label>\n  \t\t\t\t<FontAwesome\n        \t\t\tname='fa fa-refresh'\n        \t\t\tsize='lg'\n        \t\t\tonClick={()=>{this.Generatecaptcha()}}\n        \t\t\tstyle={{ textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)' ,cursor:'pointer',marginLeft :\"15px\"}}\n      \t\t\t/>\n  \t\t\t\t<Form.Control type=\"text\" size=\"sm\" placeholder=\"entercaptcha\"\n  \t\t\t\tvalue={this.state.reg.captcha} \n  \t\t\t\tonChange={(evt)=>this.handleRegstration(evt,\"captcha\")}\n  \t\t\t\t/><br/>\n  \t\t\t\t<Button className=\"centerbutton\" size=\"md\" onClick={this.submit}>Register</Button>\n\t\t\t</Form.Group>\n\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default Register;\n\n\n","import React from 'react';\nimport Login from './loginmodal';\nimport Register from './registermodal';\nimport {Navbar} from 'react-bootstrap'\nimport './../styles/ModalForm.css';\nclass NavBar extends React.Component{\n\trender() {\n\t\treturn (\n\n\t\t\t<div className=\"header\">\n\t\t\t<Navbar className=\"navbar navbar-light bg-light\">\n  \t\t\t<Navbar.Toggle />\n  \t\t\t<Navbar.Collapse className=\"justify-content-start\">\n\t    \t\t<Navbar.Text>\n\t    \t\t\t<h1>Companies Hiring during covid 19</h1>\n      \t\t\t</Navbar.Text>\n  \t\t\t</Navbar.Collapse>\n      \t\t<Navbar.Collapse className=\"justify-content-end\">\n\t    \t\t<Navbar.Text>\n\t    \t\t\t<Login/>\n      \t\t\t\t<Register/>\n      \t\t\t</Navbar.Text>\n  \t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default NavBar;\n\n\n","import React from 'react';\nimport {Dropdown,DropdownButton} from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome'\nimport './../styles/DropDown.css'\nclass Search extends React.Component{\n\tconstructor(props) {\n        super(props);\n        this.changetext=this.changetext.bind(this);\n        this.handleselectchange=this.handleselectchange.bind(this);\n        this.state = {\n            lists:[],\n            searchroles:'',\n            Searchlists:[],\n            selection:'select '+props.routecontent,\n            type:props.routecontent,\n        };\n    }\n  componentDidMount()\n  {\n    var url=\"/api/dropdown/\"+this.state.type;\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email:this.state.email,\n          password:this.state.password,\n        })\n    })\n        .then((response) => response.json())\n        .then((responseData) => {\n            this.setState({lists:this.map(responseData)});\n            this.setState({Searchlists:this.map(responseData)});\n        })\n  }\n  map(responseData)\n  {\n    const datas=[];\n        for(var i=0;i<responseData[\"output\"].length;i++)\n        {\n          if(responseData[\"output\"][i][this.state.type] !=='') \n          datas.push(responseData[\"output\"][i][this.state.type]);\n        }\n    return datas;\n  }\n  changetext(event)\n  {\n  \tvar name=event.target.name;\n  \tvar value=event.target.value;\n  \tthis.setState({[name]:value});\n    const datas=[]\n    for (var i=0;i<this.state.lists.length;i++)\n  \t{\n  \t\tvar comp=this.state.lists[i].slice(0,value.length);\n    \tif(comp.toLowerCase()===value.toLowerCase())\n    \t{\n        datas.push(this.state.lists[i]);\n      }\n  \t}\n    this.setState({Searchlists:datas});\n  }\n  handleselectchange(evt)\n  {\n    this.setState({selection:evt});\n    this.props.handlecomponent(evt,this.state.type);\n  }\n\trender() {\n        return (\n        \t<>\n              \n              <DropdownButton\n                variant=\"orange\"\n                alignRight\n                title={this.state.selection}\n                id=\"dropdown-menu-align-right dropdown btn\"\n                onSelect={this.handleselectchange}\n                  >\n              <div className=\"input-group\">\n              <div className=\"input-group-addon\">\n              <FontAwesome\n              name='fa fa-search'\n              size='lg'\n              />\n              </div>\n                <input type=\"text\" id=\"searcher\" name=\"searchroles\" value={this.state.searchtext} onChange={(evt)=>this.changetext(evt)}/>\n              </div>\n                  {this.state.Searchlists.map(function(name, index){\n                    return <Dropdown.Item key={index} eventKey={name}>{name}</Dropdown.Item>;\n                  })}\n                </DropdownButton>\n          </>\n\t\t);\n\t}\n}\nexport default Search;\n\n\n","import React from 'react';\nimport Search from './search';\nimport {Button} from 'react-bootstrap';\nimport FontAwesome from 'react-fontawesome'\nimport './../styles/SearchBar.css';\n\nclass SearchBar extends React.Component{\n\tconstructor(props) {\n        super(props);\n        this.handlecomponent=this.handlecomponent.bind(this);\n        this.sendresults=this.sendresults.bind(this);\n    }\n     handlecomponent(choice,_state){\n      this.props.handleSearchResult(_state,choice);\n      }\n      sendresults()\n      {\n      \tthis.props.handleSearchResult(this.state);\n      }\n      popsearchmenu()\n      {\n      \tvar x=document.getElementById(\"group\");\n      \tif(x.style.display === '')\n      \t\tx.style.display = 'inline-block';\n      \telse\n      \t\tx.style.display = '';\n      }\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t  <div>\n              <Button onClick={this.popsearchmenu}>\n              Filter\n              <FontAwesome\n              name='fa fa-filter'\n              size='lg'\n              />\n              </Button>\n              </div>\n              \t<div id=\"group\" className=\"container-fluid\">\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<Search routecontent={\"role\"}\n\t\t\t\t\t\thandlecomponent={this.handlecomponent}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<Search routecontent={\"location\"}\n\t\t\t\t\t\thandlecomponent={this.handlecomponent}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<Search routecontent={\"sector\"}\n\t\t\t\t\t\thandlecomponent={this.handlecomponent}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<Search routecontent={\"type\"}\n\t\t\t\t\t\thandlecomponent={this.handlecomponent}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<input type=\"button\" className=\"filter\" onClick={this.sendresults} value=\"Search Jobs\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\nexport default SearchBar;\n\n\n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport FontAwesome from 'react-fontawesome';\nimport './../styles/View.css'\nimport '../styles/JobsView.css';\n\nclass Movement extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount(){\n        this.props.increasestate();\n    }\n    render() {\n        return (\n                <>\n                <div className=\"View\">       \n                    <div className=\"group\">\n                <Button className=\"btn1 bg-danger\" onClick={this.props.decreasestate}>\n                    <FontAwesome\n                        name='fa fa-arrow-left'\n                        size='lg'\n                    />\n                </Button>\n                <Button className=\"btn2 bg-danger\" onClick={this.props.increasestate}>\n                    <FontAwesome\n                        name='fa fa-arrow-right'\n                        size='lg'\n                    />\n                </Button>\n            </div>\n                 </div>\n                </>\n        );\n    }\n}\nexport default Movement;\n\n\n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport FontAwesome from 'react-fontawesome';\nimport SearchBar from './searchbar';\nimport Movement from './movement';\nimport './../styles/View.css'\nimport '../styles/JobsView.css';\n\nclass View extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSearchResult=this.handleSearchResult.bind(this); \n        this.fetchAllJobs=this.fetchAllJobs.bind(this); \n        this.increasestate=this.increasestate.bind(this);\n        this.decreasestate=this.decreasestate.bind(this);\n        this.state={\n            start:-1,\n            end:4,\n            all:true,\n            values:[],\n            searchresult:{\n                role:'',\n                location:'',\n                type:'',\n                sector:''},\n        }\n    }\n    decreasestate()\n    {\n        var e=this.state.end;\n            if(e==0)    {alert(\"item[0]:reached\"); return;}\n        this.fetchAllJobs(e,\"backwards\");\n    }\n    increasestate()\n    {\n        var e=this.state.start;\n        this.fetchAllJobs(e,\"forwards\");\n    }\n    handleSearchResult(_state,choice)\n    {\n        this.setState({start:0});\n        this.setState({end:0});\n        var e=this.state.searchresult;\n        e[_state]=choice;\n        this.setState({searchresult:{...this.state.searchresult,[_state]:choice}});\n        this.fetchAllJobs(0,\"forwards\");\n    }\n    fetchAllJobs(e,endpoint)\n    { \n        fetch(\"api/searchresults/\"+endpoint, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          start:e,\n          role:this.state.searchresult.role,\n          location:this.state.searchresult.location,\n          sector:this.state.searchresult.sector,\n          type:this.state.searchresult.type\n        }),\n    })\n        .then((response) => response.json())\n        .then((responseData) => {\n             this.setState({values:responseData});\n             if(responseData.length<3){\n                    alert(\"item end: reached\");\n                    return ;}\n             this.setState({start:responseData[3][\"sno\"]});\n             this.setState({end:responseData[0][\"sno\"]});\n             console.log(responseData[0][\"sno\"],responseData[3][\"sno\"]);\n        })   \n    }\n    render() {\n        return (\n                <>\n                <div>\n                    <SearchBar handleSearchResult={this.handleSearchResult}/>\n                </div>\n                <div className=\"View\">       \n                <Table responsive=\"md\" hover size=\"sm\" variant=\"dark\" bordered id=\"table\">\n                    <thead className=\"head\" size=\"lg\">\n                        <tr>\n                        <th>Company</th>\n                        <th>Role</th>\n                        <th>Location</th>\n                        <th>Website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.values.map(function(name, index){\n                        return (<tr key={index}>\n                        <td>{name.company}</td>\n                        <td>{name.role}</td>\n                        <td>{name.location}</td>\n                        <td><a href={name.link}>Apply</a></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n                 </div>\n                 <Movement increasestate={this.increasestate} decreasestate={this.decreasestate}/>\n                </>\n        );\n    }\n}\nexport default View;\n\n\n","import React from 'react';\nimport NavBar from './components/navbar';\nimport View from './components/view';\nimport JobsViewSearch from './components/jobsviewsearch';\n\nclass App extends React.Component{\n        constructor(props) {\n        super(props);\n        this.state={\n        }\n    }\n        render() {\n                return (\n                        <div>\n                            <NavBar/>\n                    <View/>\n                        </div>\n                );\n        }\n}\nexport default App;\n\n\n\n","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport FontAwesome from 'react-fontawesome';\nimport './../styles/View.css'\nimport '../styles/JobsView.css';\n\nclass JobsViewSearch extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSearchResult=this.handleSearchResult.bind(this);    \n        this.state={\n            start:0,\n            end:12,\n        }\n        this.increasecount=this.increasecount.bind(this);\n        this.decreasecount=this.decreasecount.bind(this);\n    }\n    componentDidMount(){\n        this.props.fetchjobs(this.state.start, this.state.end);\n    }\n    increasecount(){\n        this.setState({start:this.state.start+12});\n        this.setState({end:this.state.end+12})   ;\n        this.props.fetchjobs(this.state.start+12, this.state.end+12,'');\n    }\n    decreasecount(){\n        if(this.state.start-12 < 0 || this.state.start===0)   {alert(\"Item 0 reached\"); return ;}\n        this.setState({start:this.state.start-12});\n        this.setState({end:this.state.end-12});\n        this.props.fetchjobs(this.state.start-12,this.state.end-12,'');\n    }\n    handleSearchResult(_state)\n    {\n        this.setState({data:_state});\n    }\n    render() {\n        return (\n                <div className=\"View\">       \n                <Table responsive=\"md\" hover size=\"sm\" variant=\"dark\" bordered id=\"table\">\n                    <thead className=\"head\" size=\"lg\">\n                        <tr>\n                        <th>Company</th>\n                        <th>Role</th>\n                        <th>Location</th>\n                        <th>Website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.values.map(function(name, index){\n                        return (<tr key={index}>\n                        <td>{name.company}</td>\n                        <td>{name.role}</td>\n                        <td>{name.location}</td>\n                        <td><a href={name.link}>Apply</a></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n                    <div className=\"group\">\n                <Button className=\"btn1 bg-danger\" onClick={this.decreasecount}>\n                    <FontAwesome\n                        name='fa fa-arrow-left'\n                        size='lg'\n                    />\n                </Button>\n                <Button className=\"btn2 bg-danger\" onClick={this.increasecount}>\n                    <FontAwesome\n                        name='fa fa-arrow-right'\n                        size='lg'\n                    />\n                </Button>\n            </div>\n                 </div>\n        );\n    }\n}\nexport default JobsViewSearch;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './app';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}